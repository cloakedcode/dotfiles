# Path to your oh-my-zsh installation.
export ZSH=$HOME/code/dotfiles/oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

source $ZSH/oh-my-zsh.sh

#------------------------------
# powerline-status
#------------------------------
function powerline_precmd() {
    PS1="$(~/code/dotfiles/powerline-shell.py $? --shell zsh 2> /dev/null)"
}

function install_powerline_precmd() {
    for s in "${precmd_functions[@]}"; do
        if [ "$s" = "powerline_precmd" ]; then
            return
        fi
    done
    precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

#------------------------------

# turn on vi mode
set -o vi

export PATH="$HOME/bin:/usr/local/bin:$PATH"
export LANG=en_US.UTF-8

export EDITOR='vim'
alias e="$EDITOR"
alias vi="vim"

alias v="vagrant"

if [[ -f "${HOME}/bin/ssh_to_site.sh" ]]; then
    source "${HOME}/bin/ssh_to_site.sh"
    alias ss="ssh_to_site"
fi

which keychain > /dev/null 2>&1
if [ $? -eq 0 ]; then
    keychain ~/.ssh/id_rsa 2>/dev/null
    . ~/.keychain/`hostname`-sh
    #. ~/.keychain/`hostname`-sh-gpg
fi

function pushtest {
    curbranch=$(git rev-parse --abbrev-ref HEAD) ; git checkout test && git reset --hard $curbranch && git push --force origin && git checkout $curbranch
}
